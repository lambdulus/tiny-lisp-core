import { SECDArray } from "../utility/SECD/SECDArray";
import { InnerNode, TopNode } from "../AST/AST";
export declare class Interpreter {
    private lastInstruction;
    private logger;
    private readonly _topNode;
    constructor(instructions: SECDArray, topNode: TopNode);
    get topNode(): TopNode;
    get stack(): SECDArray;
    set stack(value: SECDArray);
    get code(): SECDArray;
    set code(value: SECDArray);
    get dump(): SECDArray;
    set dump(value: SECDArray);
    get environment(): SECDArray;
    set environment(value: SECDArray);
    private _stack;
    private _code;
    private _dump;
    private _environment;
    protected push(arr: SECDArray, val: string | number | boolean | SECDArray, node?: InnerNode): number;
    private cloneArray;
    private evaluateUnaryExpression;
    private static boolToInt;
    private evaluateBinaryExpression;
    private evaluateIf;
    private evaluateLoad;
    detectAction(): void;
    private colourArray;
    private applyInstruction;
}
